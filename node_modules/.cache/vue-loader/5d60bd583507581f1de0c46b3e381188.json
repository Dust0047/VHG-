{"remainingRequest":"/Users/dustinchwalek/Documents/VHG-/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/dustinchwalek/Documents/VHG-/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dustinchwalek/Documents/VHG-/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dustinchwalek/Documents/VHG-/src/views/Home.vue?vue&type=template&id=8f1929d6&scoped=true&","dependencies":[{"path":"/Users/dustinchwalek/Documents/VHG-/src/views/Home.vue","mtime":1622420936000},{"path":"/Users/dustinchwalek/Documents/VHG-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dustinchwalek/Documents/VHG-/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/dustinchwalek/Documents/VHG-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dustinchwalek/Documents/VHG-/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}